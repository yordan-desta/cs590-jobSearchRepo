apiVersion: v1
data:
  application.properties: |-
    server.port=8081
    spring.datasource.url=jdbc:mysql://mysql-db:3306/account
    spring.datasource.username=root
    spring.datasource.password=root
    spring.jpa.hibernate.ddl-auto=create-drop
    spring.jpa.generate-ddl=true
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.format_sql=true
    spring.datasource.initialization-mode=always
    spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
    spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
    spring.jpa.generate-ddl=true
    spring.jpa.defer-datasource-initialization=true
    spring.jackson.serialization.fail-on-empty-beans=false
    spring.batch.initialize-schema=always
    logging.level.org.hibernate.SQL=debug
    logging.level.org.hibernate.type.descriptor.sql=trace
    app.jwtSecret= JWTSuperSecretKey
    app.jwtExpirationInMs = 604800000
kind: ConfigMap
metadata:
  name: account-config

---
apiVersion: v1
kind: Secret
metadata:
  name: account-secret
data:
  SALAH_SEC: U0FMQUhfU0VDUkVT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service-deployment
spec:
  selector:
    matchLabels:
      app: account-service-app
  replicas: 2
  template:
    metadata:
      labels:
        app: account-service-app
    spec:
      containers:
        - name: account-service-app
          image: greenex/account-service:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: account-config
            - secretRef:
                name: account-secret

---
apiVersion: v1
kind: Service
metadata:
  name: account-service
spec:
  type: LoadBalancer
  selector:
    app: account-service-app
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
